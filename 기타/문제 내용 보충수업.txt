1.문제
1.1 오류 원인
1. 객체 배열에 객체의 주소값들이 할당되어 있지 않다.
2. 배열의 길이가 3이므로, 인덱스는 2번까지 존재. 조건식에 의하면 3번 인덱스를 참조하려고 함.

1.2 문제 해결
1. new 연산자를 통해, 배열의 각 인덱스에 객체 주소값을 할당한다.
2. for(int i = 0; i<OOO.length; i++){로 수정해주면 된다.

----------------------------------------------------------------------------------------------------------------------
2. 문제
2.1 오류원인

2.2 문제 해결

-----------------------------------------------------------------------------------------------------------------------
3. 문제
3.1 오류 원인
public class Food implements Serializable{ <- 수정한거
private String name;
private int kcal;

public Food(){
}

public Food(String name, int kcal){
this.name = name;
this.kcal = kcal;
}

public String getName(){
return name;
}

public void setName(String name){
this.name = name;
}

public int getKcal(){

return kcal;

}

public void setName(int kcal){

this.kcal = kcal;

}

public toString(){

return "이름 : "+ name + "칼로리 : "+ kcal;​

}
}
직렬화 implements Serializable해주면 됨
캡슐화는 getter, setter(setter에 this 안해주면 지역변수에 지역변수 하는 꼴임)
3.2 문제 해결
public class SerializationExample {
    public static void main(String[] args) {
        // 외부 파일명
        String fileName = "Food.txt";

        // 직렬화할 객체 (예시)
            Food food = new Food("음식", 50);

 	BufferedOutputStream bos = null;

        try {
            FileOutputStream fos = new FileOutputStream(fileName);
             bos = new BufferedOutputStream(fos); // 보조 스트림 추가
            ObjectOutputStream out = new ObjectOutputStream(bos);

            // 직렬화 가능 객체를 바이트 스트림으로 변환하고 파일에 저장
            out.writeObject(customer);
        } catch (IOException e) {
            e.printStackTrace();
        } finally{
	try{
	  bos.close();
	} catch(IOException e){
	  e.printStackTrace();
	}
    }
}
